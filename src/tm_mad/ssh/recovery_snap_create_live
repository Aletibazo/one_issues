#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2020, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #
# snap_create host:parent_image snap_id vmid ds_id

set -e -o pipefail

VMID=$1
DISK_PATH=$2
FREQ=$3
REPLICA_HOST=$4


DRIVER_PATH=$(dirname $0)
source ${DRIVER_PATH}/../../etc/vmm/kvm/kvmrc
source ${DRIVER_PATH}/../../etc/tm/ssh/sshrc
source ${DRIVER_PATH}/../../scripts_common.sh

mkdir -p "${DISK_PATH}.snap"
SNAP_PATH="${DISK_PATH}.snap/recovery_snapshot"
DISK_NAME="$(basename $DISK_PATH)"
VM_DIR="$(dirname $DISK_PATH)"

if [ -f $SNAP_PATH ]; then
    SNAP_OLD=$(stat -c "%Y" $SNAP_PATH)

    if [ "$(( $(date +%s) - SNAP_OLD ))" -lt "$FREQ" ]; then
        echo "$SNAP_OLD"
        exit 0
    else
        rm $SNAP_PATH
    fi
fi

touch $SNAP_PATH

retry_if "active block job" 3 5\
    virsh -q -c ${LIBVIRT_URI} blockcopy one-${VMID} \
        --path ${DISK_PATH} --dest $SNAP_PATH --wait --finish

cd $VM_DIR

if [ ! -f "$DISK_NAME.sign" ]; then
    tar --transform="flags=r;s|${DISK_NAME}.snap/recovery_snapshot|${DISK_NAME}.recovery_snapshot|" \
        -cSf - ${DISK_NAME}.snap/recovery_snapshot | \
        ssh $REPLICA_SSH_OPTS ${REPLICA_HOST} \
        "tar xSf - -C $REPLICA_RECOVERY_SNAPS_DIR/$VMID"
    RC=$?
else
    rm -f "$DISK_NAME.snap/recovery_snapshot.rdiff"

    $RDIFF delta "$DISK_NAME.sign" "$DISK_NAME.snap/recovery_snapshot" \
        "$DISK_NAME.snap/recovery_snapshot.rdiff"

    tar --transform="flags=r;s|${DISK_NAME}.snap/recovery_snapshot.rdiff|${DISK_NAME}.rdiff|" \
        -cSf - ${DISK_NAME}.snap/recovery_snapshot.rdiff | \
        ssh $REPLICA_SSH_OPTS ${REPLICA_HOST} \
        "tar xSf - -C $REPLICA_RECOVERY_SNAPS_DIR/$VMID"
    RC=$?
fi

if [ "$RC" = "0" ]; then
    stat -c "%c" $DISK_NAME.snap/recovery_snapshot
fi
